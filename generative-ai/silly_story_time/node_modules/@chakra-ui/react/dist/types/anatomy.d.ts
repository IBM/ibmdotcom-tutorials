export declare const accordionAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemTrigger" | "itemContent" | "itemIndicator" | "itemBody">;
export declare const actionBarAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"positioner" | "content" | "separator" | "selectionTrigger" | "closeTrigger">;
export declare const alertAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "content" | "title" | "description" | "indicator">;
export declare const breadcrumbAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "separator" | "link" | "currentLink" | "list" | "ellipsis">;
export declare const blockquoteAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "content" | "icon" | "caption">;
export declare const cardAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "title" | "description" | "header" | "body" | "footer">;
export declare const checkboxCardAnatomy: import("@ark-ui/react/anatomy").Anatomy<"root" | "content" | "description" | "indicator" | "control" | "label" | "addon">;
export declare const dataListAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemLabel" | "itemValue">;
export declare const dialogAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"positioner" | "content" | "closeTrigger" | "title" | "description" | "header" | "body" | "footer" | "trigger" | "backdrop">;
export declare const drawerAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"positioner" | "content" | "closeTrigger" | "title" | "description" | "header" | "body" | "footer" | "trigger" | "backdrop">;
export declare const editableAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "control" | "label" | "input" | "area" | "preview" | "editTrigger" | "submitTrigger" | "cancelTrigger" | "textarea">;
export declare const emptyStateAnatomy: import("@ark-ui/react/anatomy").Anatomy<"root" | "content" | "title" | "description" | "indicator">;
export declare const fieldAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "label" | "input" | "textarea" | "select" | "errorText" | "helperText" | "requiredIndicator">;
export declare const fieldsetAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "content" | "errorText" | "helperText" | "legend">;
export declare const fileUploadAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemContent" | "label" | "trigger" | "dropzone" | "itemDeleteTrigger" | "itemGroup" | "itemName" | "itemPreview" | "itemPreviewImage" | "itemSizeText" | "clearTrigger" | "dropzoneContent" | "fileText">;
export declare const listAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "indicator">;
export declare const menuAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"item" | "itemIndicator" | "positioner" | "content" | "separator" | "indicator" | "trigger" | "itemGroup" | "arrow" | "arrowTip" | "contextTrigger" | "itemGroupLabel" | "itemText" | "triggerItem" | "itemCommand">;
export declare const nativeSelectAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "indicator" | "field">;
export declare const popoverAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"positioner" | "content" | "closeTrigger" | "title" | "description" | "indicator" | "header" | "body" | "footer" | "trigger" | "arrow" | "arrowTip" | "anchor">;
export declare const radioGroupAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemIndicator" | "indicator" | "label" | "itemText" | "itemControl" | "itemAddon">;
export declare const radioCardAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemContent" | "itemIndicator" | "indicator" | "label" | "itemText" | "itemControl" | "itemAddon" | "itemDescription">;
export declare const ratingGroupAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemIndicator" | "control" | "label">;
export declare const selectAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "itemIndicator" | "positioner" | "content" | "indicator" | "list" | "control" | "label" | "trigger" | "itemGroup" | "clearTrigger" | "itemGroupLabel" | "itemText" | "valueText" | "indicatorGroup">;
export declare const sliderAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "control" | "label" | "valueText" | "thumb" | "track" | "range" | "markerGroup" | "marker" | "draggingIndicator" | "markerIndicator">;
export declare const statAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "indicator" | "label" | "valueText" | "helpText" | "valueUnit">;
export declare const statusAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "indicator">;
export declare const stepsAnatomy: import("@ark-ui/react/anatomy").Anatomy<"root" | "item" | "content" | "separator" | "title" | "description" | "indicator" | "list" | "trigger" | "nextTrigger" | "prevTrigger" | "progress">;
export declare const switchAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "indicator" | "control" | "label" | "thumb">;
export declare const tableAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "caption" | "header" | "body" | "footer" | "row" | "columnHeader" | "cell">;
export declare const toastAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "closeTrigger" | "title" | "description" | "indicator" | "actionTrigger">;
export declare const tabsAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "content" | "indicator" | "list" | "trigger" | "contentGroup">;
export declare const tagAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "closeTrigger" | "label" | "startElement" | "endElement">;
export declare const timelineAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "item" | "content" | "separator" | "title" | "description" | "indicator" | "connector">;
export declare const colorPickerAnatomy: import("@ark-ui/react/anatomy").AnatomyInstance<"root" | "positioner" | "content" | "control" | "label" | "trigger" | "area" | "valueText" | "view" | "formatSelect" | "areaThumb" | "channelInput" | "channelSliderTrack" | "channelSliderThumb" | "areaBackground" | "channelSlider" | "channelSliderLabel" | "channelSliderValueText" | "transparencyGrid" | "swatchGroup" | "swatchTrigger" | "swatchIndicator" | "swatch" | "eyeDropperTrigger" | "formatTrigger" | "channelText">;
export { avatarAnatomy } from "@ark-ui/react/avatar";
export { checkboxAnatomy } from "@ark-ui/react/checkbox";
export { collapsibleAnatomy } from "@ark-ui/react/collapsible";
export { hoverCardAnatomy } from "@ark-ui/react/hover-card";
export { numberInputAnatomy } from "@ark-ui/react/number-input";
export { pinInputAnatomy } from "@ark-ui/react/pin-input";
export { progressAnatomy } from "@ark-ui/react/progress";
export { qrCodeAnatomy } from "@ark-ui/react/qr-code";
export { segmentGroupAnatomy } from "@ark-ui/react/segment-group";
export { tooltipAnatomy } from "@ark-ui/react/tooltip";
